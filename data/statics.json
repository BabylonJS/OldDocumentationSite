{
  "tutorials": [
    {
      "title": "All",
      "name": "All",
      "img": "img/tutorials/All.png",
      "desc": "All the tutorials."
    },
    {
      "title": "The Play Pen Tutorials",
      "name": "01_Play_Pen",
      "img": "img/tutorials/01.ThePlayPenTutorials.png",
      "desc": "The tutorials of the playpen.",
      "files": [
        {
          "title": "Creating a Basic Scene",
          "filename": "Creating_a_Basic_Scene",
          "abstract": "Everything in babylon.js is managed inside of a scene. It holds every objects that are going to be used to render your 3D elements."
        },
        {
          "title": "Discover Basic Elements",
          "filename": "Discover_Basic_Elements",
          "abstract": "With babylon.js you can use a lot of different basic 3D elements. They are available by default to help you create cubes, spheres, etc."
        },
        {
          "title": "Materials",
          "filename": "Materials",
          "abstract": "Materials are the basis of how your meshes look like. It is used to define a color or a texture on a 3D Object for instance."
        },
        {
          "title": "Cameras",
          "filename": "Cameras",
          "abstract": "To be able to see your 3D objects you have to set a camera. You position this camera in the scene and you define the direction where it 'looks'."
        },
        {
          "title": "Lights",
          "filename": "Lights",
          "abstract": "Lights are used to produce the diffuse and specular color received by each pixel. This color is then used by materials to determine the final color of every pixel."
        },
        {
          "title": "Position, Rotation, Scaling",
          "filename": "Position,_Rotation,_Scaling",
          "abstract": "This tutorial, we are going to learn how to position, scale and rotate any kind of objects in a 3D scene."
        },
        {
          "title": "Animations",
          "filename": "Animations",
          "abstract": "You use animations to put dynamics in a 3D scene. This tutorial help you learn how to tell your computer to move your meshes in any way you choose."
        },
        {
          "title": "Sprites",
          "filename": "Sprites",
          "abstract": "Sprites are 2D image/animation, and we will use them to display an image with alpha channel. Sprites always face the camera. Nowadays, sprites are often used to display animated characters, and for particles, and to simulate 3D complex objects like trees."
        },
        {
          "title": "Cameras, Mesh Collisions and Gravity",
          "filename": "Cameras,_Mesh_Collisions_and_Gravity",
          "abstract": "Did you ever play a FPS (First Person Shooter) game? In this tutorial, you learn how to to simulate the same camera movements: the camera is on the floor, in collision with the ground, and potentially in collision with any objects in the scene."
        },
        {
          "title": "Intersect Collisions - mesh",
          "filename": "Intersect_Collisions_-_mesh",
          "abstract": "In dynamic scenes, objects are moving and interacting with each other. To get the best rendering, you will want to know when your meshes are in contact with each other. In this tutorial, you will discover how the collision system works."
        },
        {
          "title": "Picking Collisions",
          "filename": "Picking_Collisions",
          "abstract": "With babylon.js, you can easily know which object has been picked when the user clic anywhere on the scene."
        },
        {
          "title": "Raycasts",
          "filename": "Raycasts",
          "abstract": "Throw a ray in your scene from any point and in any direction to detect objects."
        },
        {
          "title": "Particles",
          "filename": "Particles",
          "abstract": "Particles are often small sprites used to simulate hard-to-reproduce phenomena like fire, smoke, water, or abstract visual effects like magic glitter and faery dust."
        },
        {
          "title": "Environment",
          "filename": "Environment",
          "abstract": "This tutorial talk about scene environment factors and effects. We will start off with simple scene clearColor (background color), then talk briefly about scene ambientColor, then on to 6-texture skyboxes, and then fog to give an illusion of depth to your scenes."
        },
        {
          "title": "Height_Map",
          "filename": "Height_Map",
          "abstract": "A height map is a greyscale image which is used to generate ground, using the different variants of gray of our picture. This image is the elevation data for your ground. Each pixelâ€™s color is interpreted as a distance of displacement or 'height' from the 'floor' of your mesh. So, the whiter the pixel is, the taller your mountain will be."
        },
        {
          "title": "Shadows",
          "filename": "Shadows",
          "abstract": "In babylon.js shadows are now becoming dynamic, and they are now dynamically generated depending upon a light."
        },
        {
          "title": "Parametric Shapes",
          "filename": "Parametric_Shapes",
          "abstract": "Parametric shapes are a special kind of meshes. Their final shape depend upon some parameters. You can create a ribon using this for instance."
        },
        {
          "title": "Supporting fog with ShaderMaterial",
          "filename": "Supporting_fog_with_ShaderMaterial",
          "abstract": "This tutorial explains how to support fog in your custom shaders. You will have to add some lines of code in your vertex and pixel shaders."
        },
        {
          "title": "CreateBox per face colors and textures tutorial",
          "filename": "CreateBox_Per_Face_Textures_And_Colors",
          "abstract": "In this tutorial, you will learn how to use the faceUV and faceColors parameters of the MeshBuilder.CreateBox() method in order to set a different texture or color per box face."
        },
        {
          "title": "Mesh CreateXXX Methods With Options Parameter",
          "filename": "Mesh_CreateXXX_Methods_With_Options_Parameter",
          "abstract": "In this tutorial, you will learn how to use the classical CreateXXX() methods with the options parameter instead of the full list of parameters."
        }
      ]
    },
    {
      "title": "Mid Level Tutorials",
      "name": "02_Mid_Level",
      "img": "img/tutorials/02.MidLevelTutorials.png",
      "desc": "Learn how to use cool things.",
      "files": [
        {
          "title": "Position, Rotate, Translate and Spaces",
          "filename": "Position,_Rotate,_Translate_and_Spaces"
        },
        {
          "title": "Using PolygonMeshBuilder",
          "filename": "PolygonMeshBuilder"
        },
        {
          "title": "Advanced Texturing",
          "filename": "Advanced_Texturing"
        },
        {
          "title": "Caching Resources in IndexedDB",
          "filename": "Caching_Resources_in_IndexedDB"
        },
        {
          "title": "Using the Incremental Loading System",
          "filename": "Using_the_Incremental_Loading_System"
        },
        {
          "title": "Using decals",
          "filename": "Using_decals"
        },
        {
          "title": "Using Parallax Mapping",
          "filename": "Using_parallax_mapping"
        },
        {
          "title": "Creating a custom loading screen",
          "filename": "Creating_a_custom_loading_screen"
        },
        {
          "title": "Customizing camera inputs",
          "filename": "Customizing_Camera_Inputs"
        },
        {
          "title": "Ribbon Tutorial",
          "filename": "Ribbon_Tutorial"
        },
        {
          "title": "Highlight Layer",
          "filename": "Highlight_Layer"
        },
        {
          "title": "Multi-Platform Compressed Textures",
          "filename": "Multi-Platform_Compressed_Textures"
        },
        {
          "title": "BabylonJS in an Ionic Angular app",
          "filename": "BabylonJS_and_Ionic_Angular"
        }
      ]
    },
    {
      "title": "More Advanced Features",
      "name": "03_Advanced",
      "img": "img/tutorials/03.MoreAdvancedFeatures.png",
      "desc": "Some hard things.",
      "files": [
        {
          "title": "How to create a material for the materials library",
          "filename": "How_to_create_a_material_for_materialsLibrary"
        },
        {
          "title": "How to create a procedural texture for the procedural textures library",
          "filename": "How_to_create_a_proceduralTexture_for_procedutalTexturesLibrary"
        },
        {
          "title": "Adding Your Own Physics Engine Plugin to Babylon.js",
          "filename": "Adding_Your_Own_Physics_Engine_Plugin_to_Babylon.js"
        },
        {
          "title": "How to Create Your Own File Importer",
          "filename": "How_to_Create_Your_Own_File_Importer"
        },
        {
          "title": "How to dynamically morph a mesh",
          "filename": "How_to_dynamically_morph_a_mesh"
        },
        {
          "title": "How to Merge Meshes",
          "filename": "How_to_Merge_Meshes"
        },
        {
          "title": "How to use Actions",
          "filename": "How_to_use_Actions"
        },
        {
          "title": "How to use AssetsManager",
          "filename": "How_to_use_AssetsManager"
        },
        {
          "title": "How to use Bones and Skeletons",
          "filename": "How_to_use_Bones_and_Skeletons"
        },
        {
          "title": "How to use Morph targets",
          "filename": "How_to_use_MorphTargets"
        },
        {
          "title": "How to use Curve3",
          "filename": "How_to_use_Curve3"
        },
        {
          "title": "How to use DepthRenderer to get depth values",
          "filename": "How_to_use_DepthRenderer_to_get_depth_values"
        },
        {
          "title": "How to use FresnelParameters",
          "filename": "How_to_use_FresnelParameters"
        },
        {
          "title": "How to use Instances",
          "filename": "How_to_use_Instances"
        },
        {
          "title": "How to use Lens Flares",
          "filename": "How_to_use_Lens_Flares"
        },
        {
          "title": "How to use LOD",
          "filename": "How_to_use_LOD"
        },
        {
          "title": "How to use Multi-Views",
          "filename": "How_to_use_Multi-Views"
        },
        {
          "title": "How to use Path3D",
          "filename": "How_to_use_Path3D"
        },
        {
          "title": "How to use PostProcesses",
          "filename": "How_to_use_PostProcesses"
        },
        {
          "title": "How to use Procedural Textures",
          "filename": "How_to_use_Procedural_Textures"
        },
        {
          "title": "How to use PostProcessRenderPipeline",
          "filename": "How_to_use_PostProcessRenderPipeline"
        },
        {
          "title": "How to use SceneOptimizer",
          "filename": "How_to_use_SceneOptimizer"
        },
        {
          "title": "How to use the Tags System",
          "filename": "How_to_use_the_Tags_System"
        },
        {
          "title": "How to use VirtualJoysticksCamera",
          "filename": "How_to_use_VirtualJoysticksCamera"
        },
        {
          "title": "In-Browser Mesh Simplification (Auto-LOD)",
          "filename": "In-Browser_Mesh_Simplification_(Auto-LOD)"
        },
        {
          "title": "Layermasks and Multi-Cam Textures",
          "filename": "Layermasks_and_Multi-Cam_Textures"
        },
        {
          "title": "Optimizing Your Scene with Octrees",
          "filename": "Optimizing_Your_Scene_with_Octrees"
        },
        {
          "title": "Transparency and How Meshes Are Rendered",
          "filename": "Transparency_and_How_Meshes_Are_Rendered"
        },
        {
          "title": "Using depth-of-field and other lens effects",
          "filename": "Using_depth-of-field_and_other_lens_effects"
        },
        {
          "title": "Using the SSAO rendering pipeline",
          "filename": "Using_the_SSAO_rendering_pipeline"
        },
        {
          "title": "Using the Volumetric LightScattering post-process",
          "filename": "Using_the_Volumetric_LightScattering_post-process"
        },
        {
          "title": "How to use EdgesRenderer",
          "filename": "How_to_use_EdgesRenderer"
        },
        {
          "title": "How to use Blend Modes",
          "filename": "How_to_use_Blend_Modes"
        },
        {
          "title": "How to use Reflection Probes",
          "filename": "How_to_use_Reflection_probes"
        },
        {
          "title": "How to use Facet Data",
          "filename": "How_to_use_FacetData"
        },
        {
          "title": "Render Scene on a PNG",
          "filename": "Render_Scene_on_a_PNG"
        },
        {
          "title": "Using logarithmic depth buffer",
          "filename": "Using_logarithmic_depth_buffer"
        },
        {
          "title": "Optimizing your scene",
          "filename": "Optimizing_your_scene"
        },
        {
          "title": "Using the standard rendering pipeline",
          "filename": "Using_Standard_Rendering_Pipeline"
        },
        {
          "title": "Using the default rendering pipeline",
          "filename": "Using_Default_Rendering_Pipeline"
        },
        {
          "title": "How materials work",
          "filename": "How_materials_work"
        }
      ]
    },
    {
      "title": "Videos",
      "name": "Videos",
      "img": "img/tutorials/Video.png",
      "desc": "Video courses.",
      "files": [
        {
          "title": "3D on the Web Understanding the Basics",
          "filename": "3D_on_the_Web_Understanding_the_Basics"
        },
        {
          "title": "WebGL Basics",
          "filename": "WebGL_Basics"
        },
        {
          "title": "Using Babylon.js for Beginners",
          "filename": "Using_Babylon.js_for_Beginners"
        },
        {
          "title": "Understanding Materials and Inputs",
          "filename": "Understanding_Materials_and_Inputs"
        },
        {
          "title": "Game Pipeline Integration with Babylon.js",
          "filename": "Game_Pipeline_Integration_with_Babylon.js"
        },
        {
          "title": "Loading Assets",
          "filename": "Loading_Assets"
        },
        {
          "title": "Babylon.js Advanced Features",
          "filename": "Babylon.js_Advanced_Features"
        },
        {
          "title": "Special Effects",
          "filename": "Special_Effects"
        },
        {
          "title": "Video courses",
          "filename": "Video_courses"
        },
        {
          "title": "3D Programming with WebGL and Babylon.js for Beginners",
          "filename": "Zenva_course"
        },
        {
          "title": "Realtime RTS game development series with Babylon.js",
          "filename": "RTS_game_development_series"
        }
      ]
    }
  ],
  "exporters": [
    {
      "title": "All",
      "name": "All",
      "img": "img/exporters/all.jpg",
      "desc": "All the exporters."
    },
    {
      "title": "3DSMax",
      "name": "3DSMax",
      "img": "img/exporters/3DSMax.jpg",
      "desc": "Learn how to export from 3DSMax",
      "files": [
        {
          "title": "3DSMax",
          "filename": "3DSMax"
        },
        {
          "title": "3DS Max to glTF",
          "filename": "3DSMAX_to_glTF"
        },
        {
          "title": "Bones influences per vertex",
          "filename": "Bones_influences_per_vertex"
        }
      ]
    },
    {
      "title": "Blender",
      "name": "Blender",
      "img": "img/exporters/Blender.jpg",
      "desc": "Learn how to export from Blender",
      "files": [
        {
          "title": "Blender",
          "filename": "Blender"
        },
        {
          "title": "Blender tips",
          "filename": "Blender_Tips"
        },
        {
          "title": "Installing the Babylon Exporter",
          "filename": "Installing__the_Babylon_Exporter"
        }
      ]
    },
    {
      "title": "Cheetah3D",
      "name": "Cheetah3D",
      "img": "img/exporters/Cheetah3D.png",
      "desc": "Learn how to export from Cheetah3D",
      "files": [
        {
          "title": "Cheetah3D",
          "filename": "Cheetah3D"
        }
      ]
    },
    {
      "title": "Unity",
      "name": "Unity",
      "img": "img/exporters/Unity.jpg",
      "desc": "Learn how to export from Unity.",
      "files": [
        {
          "title": "Unity",
          "filename": "Unity"
        },
        {
          "title": "Export Panel",
          "filename": "Exporter"
        },
        {
          "title": "Getting Started",
          "filename": "Projects"
        },
        {
          "title": "Script Components",
          "filename": "01_ScriptComponents"
        },
        {
          "title": "Scene Manager",
          "filename": "02_SceneManager"
        },
        {
          "title": "Shader Materials",
          "filename": "03_ShaderMaterials"
        },
        {
          "title": "Collision Meshes",
          "filename": "04_CollisionMeshes"
        },
        {
          "title": "Terrain Builder",
          "filename": "05_TerrainBuilder"
        },
        {
          "title": "Animation State",
          "filename": "06_AnimationState"
        },
        {
          "title": "Runtime Prefabs",
          "filename": "07_RuntimePrefabs"
        },
        {
          "title": "Static Batching",
          "filename": "08_StaticBatching"
        },
        {
          "title": "Navigation Mesh",
          "filename": "09_NavigationMesh"
        },
        {
          "title": "Babylon Art Tools",
          "filename": "10_BabylonArtTools"
        }
      ]
    }
  ],
  "extensions": [
    {
      "title": "All",
      "name": "All",
      "img": "img/extensions/tagImage.png",
      "desc": "All the extensions."
    },
    {
      "title": "Loaders",
      "name": "Loaders",
      "img": "img/extensions/loaders.jpg",
      "desc": "Learn how to use loaders.",
      "files": [
        {
          "title": "STL",
          "filename": "STL"
        },
        {
          "title": "OBJ",
          "filename": "OBJ"
        },
        {
          "title": "glTF",
          "filename": "glTF"
        }
      ]
    },
    {
      "title": "Materials library",
      "name": "MaterialsLibrary",
      "img": "img/extensions/materials.jpg",
      "desc": "Learn how to use materials from Materials library.",
      "files": [
        {
          "title": "Fire",
          "filename": "Fire"
        },
        {
          "title": "Water",
          "filename": "Water"
        },
        {
          "title": "Lava",
          "filename": "Lava"
        },
        {
          "title": "Fur",
          "filename": "Fur"
        },
        {
          "title": "Normal",
          "filename": "Normal"
        },
        {
          "title": "Terrain",
          "filename": "Terrain"
        },
        {
          "title": "Tri-Planar Mapping",
          "filename": "Tri_Planar_Mapping"
        },
        {
          "title": "Gradient",
          "filename": "Gradient"
        },
        {
          "title": "Sky",
          "filename": "Sky"
        },
        {
          "title": "Grid",
          "filename": "Grid"
        },
        {
          "title": "Shadow Only",
          "filename": "ShadowOnly"
        },
        {
          "title": "Cell Shading",
          "filename": "Cell"
        }
      ]
    },
    {
      "title": "Procedural textures library",
      "name": "ProceduralTexturesLibrary",
      "img": "img/extensions/proceduraltextures.jpg",
      "desc": "Learn how to use procedural textures from Procedural texture library.",
      "files": [
        {
          "title": "Brick",
          "filename": "BrickProceduralTexture"
        },
        {
          "title": "Cloud",
          "filename": "CloudProceduralTexture"
        },
        {
          "title": "Fire",
          "filename": "FireProceduralTexture"
        },
        {
          "title": "Grass",
          "filename": "GrassProceduralTexture"
        },
        {
          "title": "Marble",
          "filename": "MarbleProceduralTexture"
        },
        {
          "title": "Road",
          "filename": "RoadProceduralTexture"
        },
        {
          "title": "Wood",
          "filename": "WoodProceduralTexture"
        }
      ]
    },
    {
      "title": "Post Process library",
      "name": "PostProcessLibrary",
      "img": "img/extensions/postProcess.jpg",
      "desc": "Learn how to use post processes from Post Process library.",
      "files": [
        {
          "title": "Using the Ascii Art post-process",
          "filename": "AsciiArtPostProcess"
        },
        {
          "title": "Using the Digital Rain post-process",
          "filename": "DigitalRainPostProcess"
        }
      ]
    },
    {
      "title": "Tree Generators",
      "name": "Tree_Generators",
      "img": "img/tutorials/trees.png",
      "desc": "How to generate trees.",
      "files": [
        {
          "title": "Simple Pine Generator",
          "filename": "Simple_Pine_Generator"
        },
        {
          "title": "SPS Tree Generator",
          "filename": "SPS_Tree_Generator"
        },
        {
          "title": "Quick Tree Generator",
          "filename": "Quick_Tree_Generator"
        }
      ]
    },
    {
      "title": "Cloner System",
      "name": "ClonerSystem",
      "img": "images/matrixCloner.jpg",
      "desc": "Cloning meshes systematically",
      "files": [
        {
          "title": "Radial Cloner",
          "filename": "RadialCloner"
        },
        {
          "title": "Linear Cloner",
          "filename": "LinearCloner"
        },
        {
          "title": "Matrix Cloner",
          "filename": "MatrixCloner"
        },
        {
          "title": "Object Cloner",
          "filename": "ObjectCloner"
        },
        {
          "title": "Random Effector",
          "filename": "RandomEffector"
        }
      ]
    },
    {
      "title": "Editor",
      "name": "Editor",
      "img": "img/extensions/editor.png",
      "desc": "Learn how to use the official editor",
      "files": [
        {
          "title": "Introduction",
          "filename": "Introduction"
        },
        {
          "title": "Getting Started",
          "filename": "Getting_Started"
        },
        {
          "title": "Managing Animations",
          "filename": "Managing_Animations"
        },
        {
          "title": "Creating Cinematic",
          "filename": "Creating_Cinematic"
        },
        {
          "title": "Creating Particle Systems",
          "filename": "Creating_Particle_Systems"
        },
        {
          "title": "Creating Materials",
          "filename": "Creating_Materials"
        },
        {
          "title": "Managing Materials",
          "filename": "Managing_Materials"
        },
        {
          "title": "Managing Lens Flare Systems",
          "filename": "Managin_Lens_Flare_Systems"
        },
        {
          "title": "Using the Actions Builder",
          "filename": "Using_Actions_Builder"
        },
        {
          "title": "Using the Post-Process Builder (for developers)",
          "filename": "Using_Post_Processes_Builder"
        },
        {
          "title": "Using the Materials Builder (for developers)",
          "filename": "Using_Materials_Builder"
        }
      ]
    },
    {
      "title": "CastorGUI",
      "name": "CastorGUI",
      "img": "img/extensions/CastorGUI.png",
      "desc": "Learn how to use CastorGUI.",
      "files": [
        {
          "title": "CastorGUI",
          "filename": "CastorGUI"
        },
        {
          "title": "GUIButton",
          "filename": "GUIButton"
        },
        {
          "title": "GUICheckbox",
          "filename": "GUICheckbox"
        },
        {
          "title": "GUIColor",
          "filename": "GUIColor"
        },
        {
          "title": "GUIDialog",
          "filename": "GUIDialog"
        },
        {
          "title": "GUIFieldset",
          "filename": "GUIFieldset"
        },
        {
          "title": "GUIGroup",
          "filename": "GUIGroup"
        },
        {
          "title": "GUILabel",
          "filename": "GUILabel"
        },
        {
          "title": "GUIManager",
          "filename": "GUIManager"
        },
        {
          "title": "GUIMeter",
          "filename": "GUIMeter"
        },
        {
          "title": "GUIPanel",
          "filename": "GUIPanel"
        },
        {
          "title": "GUIProgress",
          "filename": "GUIProgress"
        },
        {
          "title": "GUIRadio",
          "filename": "GUIRadio"
        },
        {
          "title": "GUISelect",
          "filename": "GUISelect"
        },
        {
          "title": "GUISlider",
          "filename": "GUISlider"
        },
        {
          "title": "GUISpinner",
          "filename": "GUISpinner"
        },
        {
          "title": "GUIText",
          "filename": "GUIText"
        },
        {
          "title": "GUITextarea",
          "filename": "GUITextarea"
        },
        {
          "title": "GUITextfield",
          "filename": "GUITextfield"
        },
        {
          "title": "GUITextures",
          "filename": "GUITextures"
        },
        {
          "title": "GUIWindow",
          "filename": "GUIWindow"
        }
      ]
    }
  ],
  "overviews": [
    {
      "title": "All",
      "name": "All",
      "img": "img/tutorials/All.png",
      "desc": "All overviews."
    },
    {
      "title": "Maps",
      "name": "Maps",
      "img": "img/tutorials/All.png",
      "desc": "Documentation Category Map",
      "files": [
        {
          "title": "Documentation Category Map",
          "filename": "Documentation_Category_Map"
        }
      ]
    },
    {
      "title": "Standard",
      "name": "Standard",
      "img": "img/tutorials/All.png",
      "desc": "First level feature exploration",
      "files": [
        {
          "title": "How Rotations and Translations Work",
          "filename": "How_Rotations_and_Translations_Work"
        },
        {
          "title": "How to use the Solid Particle System",
          "filename": "Solid_Particle_System"
        },
        {
          "title": "Physics Engine - Basic Usage",
          "filename": "Using_The_Physics_Engine"
        },
        {
          "title": "Playing sounds and music",
          "filename": "Playing_sounds_and_music"
        },
        {
          "title": "Handling Babylon.js events with observables",
          "filename": "Observables"
        },
        {
          "title": "WebGL2 support",
          "filename": "WebGL2"
        },
        {
          "title": "Using the WebVR Camera",
          "filename": "WebVR_Camera"
        },
        {
          "title": "Babylon.GUI: How to create 2D and 3D UI",
          "filename": "Gui"
        },
        {
          "title": "Behaviors",
          "filename": "Behaviors"
        },
        {
          "title": "Occlusion Queries",
          "filename": "OcclusionQuery"
        },
        {
          "title": "NPM Support",
          "filename": "NPM_Support"
        }
      ]
    },
    {
      "title": "PBR",
      "name": "PBR",
      "img": "img/extensions/materials/PBRMaterial.jpg",
      "desc": "All about the Physically Based Rendering material",
      "files": [
        {
          "title": "Introduction to Physically Based Rendering",
          "filename": "Physically_Based_Rendering"
        },
        {
          "title": "Master the Physically Based Rendering",
          "filename": "Physically_Based_Rendering_Master"
        }
      ]
    },
    {
      "title": "Inspector",
      "name": "Inspector",
      "img": "img/tutorials/All.png",
      "desc": "Inspector description",
      "files": [
        {
          "title": "Using the debug layer",
          "filename": "Using_the_debuglayer"
        },
        {
          "title": "Debug Layer features",
          "filename": "Debug_layer_features"
        },
        {
          "title": "Customize the debug layer",
          "filename": "Customize_debug_layer"
        }
      ]
    }
  ],
  "generals": [
    {
      "title": "Essentials",
      "name": "Essentials",
      "img": "img/tutorials/All.png",
      "desc": "Beginner? start here!",
      "files": [
        {
          "title": "A Babylon.js Primer",
          "filename": "A_Babylon.js_Primer"
        },
        {
          "title": "The Playground Tutorial",
          "filename": "The_Playground_Tutorial"
        }
      ]
    },
    {
      "title": "General",
      "name": "General",
      "img": "img/tutorials/General.png",
      "desc": "General good things to know",
      "files": [
        {
          "title": "Off-Site Tutorials List",
          "filename": "offsite_tutorials_list"
        },
        {
          "title": "Interesting Playgrounds",
          "filename": "playgrounds"
        },
        {
          "title": "How to start contributing to Babylon.js",
          "filename": "how_to_start"
        },
        {
          "title": "Approved Naming Conventions",
          "filename": "Approved_Naming_Conventions"
        },
        {
          "title": "Creating the Mini-fied Version",
          "filename": "Creating_the_Mini-fied_Version"
        },
        {
          "title": "Framework versions",
          "filename": "Framework_versions"
        },
        {
          "title": "FileFormat Map (.babylon)",
          "filename": "File_Format_Map_(.babylon)"
        },
        {
          "title": "Setup Visual Studio to contribute to Babylon.js",
          "filename": "setup_visualStudio"
        },
        {
          "title": "Headless Babylon.js with the NullEngine",
          "filename": "nullEngine"
        }
      ]
    }
  ]
}